resource "aws_apigatewayv2_api" "api"{
  count = var.gateway_version == 2 ? 1 : 0
  name          = var.api_gateway_name
  protocol_type = "HTTP"
}

resource "aws_api_gateway_rest_api" "api" {
  count = var.gateway_version == 1 ? 1 : 0
  name          = var.api_gateway_name
  description = var.api_gateway_description
  endpoint_configuration {
    types = ["REGIONAL"]
  }
}

data "aws_lambda_function" "lambda_auth" {
  function_name = "LambdaAuthorizer"
}

data "aws_iam_role" "invocation_role" {
  name = "gateway_auth_invocation"
}

resource "aws_api_gateway_authorizer" "Token_Authorizer" {
  name                   = "APITokenAuthorizer"
  rest_api_id            = aws_api_gateway_rest_api.api.id
  authorizer_uri         = data.aws_lambda_function.lambda_auth.invoke_arn
  authorizer_credentials = data.aws_iam_role.invocation_role.arn
#  identity_source                  = "method.request.header.Authorizer"
  //type = "TOKEN"
}

// Api key who's value is generated by aws on creation
// TODO migrate all deployment to terraform cloud


# TODO needs to rotate


#data "aws_secretsmanager_secret" "version" {
#  count = var.authenticator_exists == false ? 1 : 0
#  name = "AuthenticatorGateway"
#}